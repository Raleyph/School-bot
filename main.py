import telebot
import config
import sqlite3
import classes_list

from telebot import types

bot = telebot.TeleBot(config.TOKEN)

mode = None             # —Ä–µ–∂–∏–º
lang = 'ua'             # —è–∑—ã–∫
class_set = None        # –∫–ª–∞—Å—Å
sent_ms = 0             # —Ä–∞–∑—Ä–µ—à–µ–Ω–∏–µ –Ω–∞ –æ—Ç–ø—Ä–∞–≤–∫—É

lost = [
    1672178639
]

lost_id = 1672178639    # id –ø–æ–ª—É—á–∞—Ç–µ–ª—è –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—â–∏—Ö

# –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –ë–î –∏ —É—Å—Ç–∞–Ω–æ–≤–∫–∞ –∫—É—Ä—Å–æ—Ä–∞
conn = sqlite3.connect('database.db', check_same_thread=False)
cursor = conn.cursor()


# —É—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–Ω–∞—á–µ–Ω–∏–π –∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ —Ç–∞–±–ª–∏—Ü—ã
def db_values(user_id: int, user_name: str, user_surname: str, username: str, language: str):
    cursor.execute('INSERT INTO user_message (user_id, user_name, user_surname, username, language) VALUES (?, ?, ?, ?, ?)', (user_id, user_name, user_surname, username, language))
    conn.commit()


# –≤—ã–±–æ—Ä —è–∑—ã–∫–∞
def language_mode(message):
    lg = types.InlineKeyboardMarkup(row_width=3)
    lg.add(config.ua, config.ru, config.en)
    bot.send_message(message.from_user.id, '–í–∏–±–µ—Ä—ñ—Ç—å –º–æ–≤—É –∫–æ—Ä–∏—Å—Ç—É–≤–∞–Ω–Ω—è:', reply_markup=lg)


# –æ—Å–Ω–æ–≤–Ω–∞—è –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞
def main_keyboard(message):
    kbrd = types.ReplyKeyboardMarkup(resize_keyboard=True)
    kbrd.add(config.food, config.lost, config.day, config.covi, config.lang, config.info)
    bot.reply_to(message, config.hello_message, reply_markup=kbrd)


# –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ
@bot.message_handler(commands=['start'])
def send_welcome(message):
    # –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞
    main_keyboard(message)

    # –≤–≤–æ–¥ –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    us_id = message.from_user.id
    us_name = message.from_user.first_name
    us_sname = message.from_user.last_name
    username = message.from_user.username
    language = 'ua'

    # –∑–∞–ø–∏—Å—Ç—å –≤ —Ç–∞–±–ª–∏—Ü—É
    db_values(user_id=us_id, user_name=us_name, user_surname=us_sname, username=username, language=language)


# –æ–±—Ä–∞–±–æ—Ç–∫–∞ –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—â–∏—Ö
def lost_set(message):
    sent = bot.send_message(message.from_user.id, '–í–≤–µ–¥—ñ—Ç—å –ø—Ä—ñ–∑–≤–∏—â–∞ —É—á–Ω—ñ–≤ —á–µ—Ä–µ–∑ –∫–æ–º—É:')
    bot.register_next_step_handler(sent, send_list)


# –æ—Ç–ø—Ä–∞–≤–∫–∞ –¥–∞–Ω–Ω—ã—Ö
def send_list(message):
    global class_set
    global mode
    global sent_ms

    mess = message.text

    class_set_str = "".join(class_set)
    bot.send_message(lost_id, '–í—ñ–¥—Å—É—Ç–Ω—ñ ' + class_set_str + ': ' + mess)
    bot.send_message(message.from_user.id, '–î–∞–Ω—ñ –≤—ñ–¥–ø—Ä–∞–≤–ª–µ–Ω—ñ!')


# –æ–±—Ä–∞–±–æ—Ç–∫–∞ –≤—ã–≤–æ–¥–∞ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è
def day_subjects(message):
    bot.send_message(message.from_user.id, '–†–æ–∑–∫–ª–∞–¥ –Ω–∞ —É–≤–µ—Å—å —Ç–∏–∂–¥–µ–Ω—å:')


# –æ–≤—Ç–µ—Ç—ã –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏—è
@bot.message_handler(content_types=['text'])
def get_text_messages(message):
    global mode
    global class_set

    if message.text.lower() == '–ø—Ä–∏–≤—ñ—Ç':
        # –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ
        bot.send_message(message.from_user.id, '–ü—Ä–∏–≤—ñ—Ç!üëãüèª')
    elif message.text.lower() == '—ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è':
        # –≤—ã–≤–æ–¥ –∏–Ω—Ñ–æ
        bot.send_message(message.from_user.id, config.info_message, parse_mode='html', disable_web_page_preview=True)
    elif message.text.lower() == '–º–æ–≤–∞':
        language = types.InlineKeyboardMarkup(row_width=3)
        language.add(config.ua, config.ru, config.en)
        bot.send_message(message.from_user.id, '–í–∏–±–µ—Ä—ñ—Ç—å –º–æ–≤—É –∫–æ—Ä–∏—Å—Ç—É–≤–∞–Ω–Ω—è:', reply_markup=language)
    elif message.text.lower() == '–≤—ñ–¥—Å—É—Ç–Ω—ñ':
        mode = 1
        bot.send_message(message.chat.id, '–í–∏–±–µ—Ä—ñ—Ç—å –∫–ª–∞—Å:')
    elif message.text.lower() == '—ó–¥–∞–ª—å–Ω—è':
        mode = 2
        bot.send_message(message.chat.id, '–î–∞–Ω–∞ —Ñ—É–Ω–∫—Ü—ñ—è –ø–æ–∫–∏ —â–æ –Ω–µ –ø—Ä–∞—Ü—é—î')
    elif message.text.lower() == '—Ä–æ–∑–∫–ª–∞–¥':
        mode = 3
        bot.send_message(message.chat.id, '–í–∏–±–µ—Ä—ñ—Ç—å –∫–ª–∞—Å:')
    elif mode == 1:
        data = message.text.lower()
        for key in classes_list.classes.values():
            if data in key:
                lost_set(message)
                class_set = data
    else:
        bot.send_message(message.from_user.id, '–Ø –Ω–µ –∑–Ω–∞—é, —â–æ –≤—ñ–¥–ø–æ–≤—ñ—Å—Ç–∏ :(')


# –∫–æ–ª–ª–±—ç–∫–∏ –¥–ª—è –∏–Ω–ª–∞–π–Ω-–∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã
@bot.callback_query_handler(func=lambda call: True)
def callback(call):
    global lang
    global sent_ms
    try:
        if call.message:
            if call.data == 'ua_l':
                lang = 'ua'
                print(lang)
            elif call.data == 'ru_l':
                lang = 'ru'
                print(lang)
            elif call.data == 'en_l':
                lang = 'en'
                print(lang)
            else:
                bot.send_message(call.message.chat.id, '–ü–æ–º–∏–ª–∫–∞!')

            bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id, text='–í–∏–±–µ—Ä—ñ—Ç—å –∫–ª–∞—Å:')
    except Exception as e:
        print(repr(e))


# –ø–æ—Å—Ç–æ—è–Ω–Ω–∞—è —Ä–∞–±–æ—Ç–∞ –±–æ—Ç–∞
bot.polling(none_stop=True)
