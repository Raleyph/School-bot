import telebot
import config

from telebot import types

bot = telebot.TeleBot(config.TOKEN)
mode = 0


@bot.message_handler(commands=['start'])
def send_welcome(message):

    kbrd = types.ReplyKeyboardMarkup(resize_keyboard=True)

    kbrd.add(config.food, config.lost, config.day, config.covi, config.lang, config.info)

    bot.reply_to(message, f'–ü—Ä–∏–≤—ñ—Ç, —Ü–µ –±–æ—Ç –ö—Ä–∞–º–∞—Ç–æ—Ä—Å—å–∫–æ–≥–æ –∑–∞–∫–ª–∞–¥—É —Å–µ—Ä–µ–¥–Ω—å–æ—ó –æ—Å–≤—ñ—Ç–∏ ‚Ññ22 –∑ –ø—Ä–æ—Ñ—ñ–ª—å–Ω–∏–º –Ω–∞–≤—á–∞–Ω–Ω—è–º —ñ–º. –ú.–ú.–ö—Ä—É–ø—á–µ–Ω–∫–∞ \n' +
                          f'\n' +
                          f'–í–∏–±–µ—Ä—ñ—Ç—å –º–æ–≤—É –∫–æ—Ä–∏—Å—Ç—É–≤–∞–Ω–Ω—è:\n', reply_markup=kbrd)


@bot.message_handler(content_types=['text'])
def get_text_messages(message):
    if message.text.lower() == '–ø—Ä–∏–≤–µ—Ç':
        bot.send_message(message.from_user.id, '–ü—Ä–∏–≤—ñ—Ç!üëãüèª')
    elif message.text.lower() == '—ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è':
        bot.send_message(message.from_user.id, config.info_message, parse_mode='html', disable_web_page_preview=True)
    elif message.text.lower() == '–≤—ñ–¥—Å—É—Ç–Ω—ñ':
        mode == 1
        lost_pupils = types.InlineKeyboardMarkup(row_width=3)
        lost_pupils.add(config.c1_a, config.c1_b, config.c1_v, config.c2_a, config.c2_b, config.c2_v, config.c3_a, config.c3_b, config.c3_v, config.c4_a, config.c4_b,
                        config.c4_v, config.c5_a, config.c5_b, config.c5_v, config.c6_a, config.c6_b, config.c6_v, config.c7_a, config.c7_b, config.c7_v, config.c8_a,
                        config.c8_b, config.c8_b, config.c8_v, config.c9_a, config.c9_b, config.c9_v, config.c10_a, config.c10_b, config.c10_v, config.c11_a, config.c11_b, config.c11_v)
        bot.send_message(message.chat.id, '–í–∏–±–µ—Ä—ñ—Ç—å –∫–ª–∞—Å:', reply_markup=lost_pupils)
    elif message.text.lower() == 'covid-19':
        bot.send_message(message.from_user.id, config.final_message, parse_mode='html')
    elif message.text.lower() == '–º–æ–≤–∞':
        language = types.InlineKeyboardMarkup(row_width=3)
        language.add(config.ua, config.ru, config.en)
        bot.send_message(message.from_user.id, '–í–∏–±–µ—Ä—ñ—Ç—å –º–æ–≤—É –∫–æ—Ä–∏—Å—Ç—É–≤–∞–Ω–Ω—è:', reply_markup=language)
    elif message.text.lower() == '—ó–¥–∞–ª—å–Ω—è':
        mode == 2
        food_sys = types.InlineKeyboardMarkup(row_width=3)
        food_sys.add(config.c1_a, config.c1_b, config.c1_v, config.c2_a, config.c2_b, config.c2_v, config.c3_a, config.c3_b, config.c3_v, config.c4_a, config.c4_b,
                     config.c4_v, config.c5_a, config.c5_b, config.c5_v, config.c6_a, config.c6_b, config.c6_v, config.c7_a, config.c7_b, config.c7_v, config.c8_a,
                     config.c8_b, config.c8_b, config.c8_v, config.c9_a, config.c9_b, config.c9_v, config.c10_a, config.c10_b, config.c10_v, config.c11_a, config.c11_b, config.c11_v)
        bot.send_message(message.chat.id, '–í–∏–±–µ—Ä—ñ—Ç—å –∫–ª–∞—Å:', reply_markup=food_sys)
    elif message.text.lower() == '—Ä–æ–∑–∫–ª–∞–¥':
        day_time = types.InlineKeyboardMarkup(row_width=3)

        day_time.add(config.c1_a, config.c1_b, config.c1_v, config.c2_a, config.c2_b, config.c2_v, config.c3_a, config.c3_b, config.c3_v, config.c4_a, config.c4_b,
                     config.c4_v, config.c5_a, config.c5_b, config.c5_v, config.c6_a, config.c6_b, config.c6_v, config.c7_a, config.c7_b, config.c7_v, config.c8_a,
                     config.c8_b, config.c8_b, config.c8_v, config.c9_a, config.c9_b, config.c9_v, config.c10_a, config.c10_b, config.c10_v, config.c11_a, config.c11_b, config.c11_v, config.alarm_timeing)

        bot.send_message(message.chat.id, '–í–∏–±–µ—Ä—ñ—Ç—å –∫–ª–∞—Å:', reply_markup=day_time)
    else:
        bot.send_message(message.from_user.id, '–Ø –Ω–µ –∑–Ω–∞—é, —â–æ –≤—ñ–¥–ø–æ–≤—ñ—Å—Ç–∏ :(')
        mode == 0


@bot.callback_query_handler(func=lambda call: True)
def callback(call):
    try:
        if call.message:
            if call.data == '1a':
                bot.send_message(call.message.chat.id, '1–∞')
            elif call.data == '1b':
                bot.send_message(call.message.chat.id, '1–±')

            bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.id, text="–í–≤–µ–¥—ñ—Ç—å —ñ–º–µ–Ω–∞ —Ç–∞ –ø—Ä—ñ–∑–≤–∏—â–∞ –±–µ–∑ –ø–æ–º–∏–ª–æ–∫ —á–µ—Ä–µ–∑ –∫–æ–º—É", reply_markup=None)
    except Exception as e:
        print(repr(e))


bot.polling(none_stop=True)
